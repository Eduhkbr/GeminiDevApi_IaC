name: Terraform Deploy
on:
  push:
    branches:
      - main

jobs:
  terraform:
    name: Terraform
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./terraform
    env:
      TF_VAR_db_name: ${{ secrets.DB_NAME }}
      TF_VAR_db_user: ${{ secrets.DB_USER }}
      TF_VAR_db_password: ${{ secrets.DB_PASSWORD }}
      TF_VAR_gcp_project_id: ${{ secrets.GCP_PROJECT_ID }}
      TF_VAR_image_url: ${{ secrets.IMAGE_URL }}
      TF_VAR_db_instance_name: ${{ secrets.DB_INSTANCE_NAME }}
      TF_VAR_redis_instance_name: ${{ secrets.REDIS_INSTANCE_NAME }}
      TF_VAR_gcp_region: ${{ secrets.GCP_REGION }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.0

      - name: Google Auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}'

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Import existing resources (Cloud SQL + Redis)
        run: |
          # Importa a instância do Cloud SQL
          terraform import google_sql_database_instance.default \
            projects/${{ secrets.GCP_PROJECT_ID }}/instances/${{ secrets.DB_INSTANCE_NAME }} || true

          # Importa apenas o database dentro da instância
          terraform import google_sql_database.default \
            projects/${{ secrets.GCP_PROJECT_ID }}/instances/${{ secrets.DB_INSTANCE_NAME }}/databases/${{ secrets.DB_NAME }} || true

          # Importa a instância do Redis
          terraform import google_redis_instance.default \
            projects/${{ secrets.GCP_PROJECT_ID }}/locations/${{ secrets.GCP_REGION }}/instances/${{ secrets.REDIS_INSTANCE_NAME }} || true
        continue-on-error: true

      - name: Terraform Plan
        id: plan
        run: terraform plan -input=false
        continue-on-error: true

      - name: Terraform Apply
        id: apply
        if: github.ref == 'refs/heads/main' && steps.plan.outcome == 'success'
        run: terraform apply -input=false -auto-approve

      - name: Set Env Variables from Terraform Outputs
        if: steps.apply.outcome == 'success'
        run: |
          echo "DB_PRIVATE_IP=$(terraform output -raw db_private_ip_address)" >> $GITHUB_ENV
          echo "REDIS_HOST=$(terraform output -raw redis_host)" >> $GITHUB_ENV

      - name: Run SQL init script
        if: steps.apply.outcome == 'success'
        run: |
          docker run --rm \
            -e PGPASSWORD=${{ secrets.DB_PASSWORD }} \
            -v $(pwd):/workspace \
            postgres:15 \
            psql -h $DB_PRIVATE_IP -U ${{ secrets.DB_USER }} -d ${{ secrets.DB_NAME }} -f /workspace/terraform/init.sql

      - name: Terraform Output
        id: output
        if: steps.apply.outcome == 'success'
        run: |
          echo "Cloud Run URL: $(terraform output -raw cloudrun_url)"